(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{361:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"前端开发规范"}},[t._v("前端开发规范")]),n("h2",{attrs:{id:"总体规范"}},[t._v("总体规范")]),n("p",[t._v("参考：")]),t._m(0),n("h2",{attrs:{id:"总体开发须知"}},[t._v("总体开发须知")]),t._m(1),t._m(2),n("h2",{attrs:{id:"html"}},[t._v("html")]),n("h3",{attrs:{id:"通用约定"}},[t._v("通用约定")]),n("h3",{attrs:{id:"文档申明"}},[t._v("文档申明")]),t._m(3),n("h3",{attrs:{id:"语言申明"}},[t._v("语言申明")]),t._m(4),n("h3",{attrs:{id:"编码申明，标准的-utf-8"}},[t._v("编码申明，标准的 UTF-8")]),t._m(5),n("h3",{attrs:{id:"seo优化（tdk）"}},[t._v("seo优化（TDK）")]),t._m(6),n("h3",{attrs:{id:"标签及闭合"}},[t._v("标签及闭合")]),t._m(7),t._m(8),t._m(9),n("h3",{attrs:{id:"html代码大小写"}},[t._v("HTML代码大小写")]),n("p",[t._v("HTML标签名、类名、标签属性和大部分属性值统一用小写，HTML文本、CDATA、JavaScript、meta标签某些属性等内容可大小写混合")]),t._m(10),n("h3",{attrs:{id:"class-与-id"}},[t._v("Class 与 ID")]),t._m(11),t._m(12),n("h3",{attrs:{id:"类型属性"}},[t._v("类型属性")]),n("p",[t._v("不需要为 CSS、JS 指定类型属性，HTML5 中默认已包含")]),t._m(13),n("h3",{attrs:{id:"元素属性"}},[t._v("元素属性")]),n("p",[t._v("属性的定义，统一使用双引号。")]),n("p",[t._v("HTML5 规范中 disabled 、 checked 、 selected 等属性不用设置值。")]),t._m(14),n("h3",{attrs:{id:"标签嵌套"}},[t._v("标签嵌套")]),t._m(15),n("p",[t._v("严格嵌套约束在所有的浏览器下都不被允许；而语义嵌套约束，浏览器大多会容错处理，生成的文档树可能相互不太")]),n("p",[t._v("一样。")]),t._m(16),t._m(17),t._m(18),t._m(19),n("h3",{attrs:{id:"标签语意化"}},[t._v("标签语意化")]),n("p",[t._v("语义化的 HTML 结构，有助于机器（搜索引擎）理解，另一方面多人协作时，能迅速了解开发者意图。")]),n("h3",{attrs:{id:"viewport"}},[t._v("viewport")]),t._m(20),n("p",[t._v("为移动端设备优化，设置可见区域的宽度和初始缩放比例。")]),t._m(21),n("h3",{attrs:{id:"ios-图标"}},[t._v("iOS 图标")]),t._m(22),t._m(23),n("h3",{attrs:{id:"favicon"}},[t._v("favicon")]),t._m(24),t._m(25),n("h3",{attrs:{id:"head-模板"}},[t._v("HEAD 模板")]),t._m(26),n("h2",{attrs:{id:"css"}},[t._v("css")]),n("h3",{attrs:{id:"class-和-id"}},[t._v("Class 和 ID")]),t._m(27),n("h3",{attrs:{id:"申明块格式"}},[t._v("申明块格式")]),t._m(28),n("h3",{attrs:{id:"书写顺序"}},[t._v("书写顺序")]),t._m(29),n("p",[t._v("由于定位（positioning）可以从正常的文档流中移除元素，并且还能覆盖盒模型（box model）相关的样式，因 此排在首位。盒模型决定了组件的尺寸和位置，因此排在第二位。 其他属性只是影响组件的内部（inside）或者是不影响前两组属性，因此排在后面。")]),t._m(30),n("h3",{attrs:{id:"链接的样式顺序："}},[t._v("链接的样式顺序：")]),t._m(31),n("h3",{attrs:{id:"浏览器私有前缀写法"}},[t._v("浏览器私有前缀写法")]),t._m(32),t._m(33),n("h3",{attrs:{id:"性能优化"}},[t._v("性能优化")]),n("h4",{attrs:{id:"慎重选择高消耗的样式-高消耗属性在绘制前需要浏览器进行大量计算"}},[t._v("慎重选择高消耗的样式,高消耗属性在绘制前需要浏览器进行大量计算")]),t._m(34),n("h4",{attrs:{id:"避免过分重排-发生重排的时候，浏览器需要重新计算布局位置与大小"}},[t._v("避免过分重排,发生重排的时候，浏览器需要重新计算布局位置与大小")]),n("p",[t._v("常见的重排元素:")]),t._m(35),n("h4",{attrs:{id:"正确使用-display-的属性-display-属性会影响页面的渲染"}},[t._v("正确使用 Display 的属性,Display 属性会影响页面的渲染")]),t._m(36),n("h4",{attrs:{id:"不滥用-float"}},[t._v("不滥用 Float")]),n("p",[t._v("Float在渲染时计算量比较大，尽量减少使用。")]),n("h4",{attrs:{id:"动画性能优化"}},[t._v("动画性能优化")]),n("p",[t._v("动画的实现原理，是利用了人眼的“视觉暂留”现象，在短时间内连续播放数幅静止的画面，使肉眼因视觉残象产生错")]),n("p",[t._v("觉，而误以为画面在“动”。")]),t._m(37),t._m(38),n("p",[t._v("一般浏览器的渲染刷新频率是 60 fps，所以在网页当中，帧率如果达到 50-60 fps 的动画将会相当流畅，让人感")]),n("p",[t._v("到舒适。")]),t._m(39),n("h4",{attrs:{id:"利用硬件能力，如通过-3d-变形开启-gpu-加速"}},[t._v("利用硬件能力，如通过 3D 变形开启 GPU 加速")]),n("p",[t._v("一般在 Chrome 中，3D或透视变换（perspective transform）CSS属性和对 opacity 进行 CSS 动画会创建")]),n("p",[t._v("新的图层，在硬件加速渲染通道的优化下，GPU 完成 3D 变形等操作后，将图层进行复合操作（Compesite")]),n("p",[t._v("Layers），从而避免触发浏览器大面积重绘和重排。")]),t._m(40),n("h2",{attrs:{id:"javascript"}},[t._v("javascript")]),n("h3",{attrs:{id:"类型"}},[t._v("类型")]),t._m(41),n("h3",{attrs:{id:"引用"}},[t._v("引用")]),t._m(42),t._m(43),n("ul",[n("li",[t._v("对所有引用都使用 "),n("code",[t._v("const")]),t._v("，不要使用 "),n("code",[t._v("var")]),t._v("，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/prefer-const.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefer-const"),n("OutboundLink")],1),t._v(", "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-const-assign.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-const-assign"),n("OutboundLink")],1)])]),t._m(44),t._m(45),n("ul",[n("li",[t._v("如果引用是可变动的，使用 "),n("code",[t._v("let")]),t._v(" 代替 "),n("code",[t._v("var")]),t._v("，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-var.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-var"),n("OutboundLink")],1)])]),t._m(46),t._m(47),n("h3",{attrs:{id:"对象"}},[t._v("对象")]),n("ul",[n("li",[n("p",[t._v("请使用字面量值创建对象，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-new-object.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-new-object"),n("OutboundLink")],1)]),t._m(48)]),t._m(49),t._m(50)]),t._m(51),t._m(52),n("ul",[n("li",[n("p",[t._v("请使用对象方法的简写方式，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/object-shorthand.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("object-shorthand"),n("OutboundLink")],1)]),t._m(53)]),n("li",[n("p",[t._v("请使用对象属性值的简写方式，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/object-shorthand.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("object-shorthand"),n("OutboundLink")],1)]),t._m(54),t._m(55)]),t._m(56)]),t._m(57),t._m(58),n("ul",[n("li",[t._v("只对非法标识符的属性使用引号，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/quote-props.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("quote-props"),n("OutboundLink")],1)])]),t._m(59),t._m(60),t._m(61),t._m(62),t._m(63),t._m(64),n("h3",{attrs:{id:"数组"}},[t._v("数组")]),n("ul",[n("li",[n("p",[t._v("请使用字面量值创建数组，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-array-constructor.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-array-constructor"),n("OutboundLink")],1)]),t._m(65)]),t._m(66),t._m(67),t._m(68)]),t._m(69),t._m(70),t._m(71),t._m(72),t._m(73),t._m(74),t._m(75),n("h3",{attrs:{id:"解构赋值"}},[t._v("解构赋值")]),n("ul",[n("li",[t._v("当需要使用对象的多个属性时，请使用解构赋值，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/prefer-destructuring",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefer-destructuring"),n("OutboundLink")],1)])]),t._m(76),t._m(77),n("ul",[n("li",[n("p",[t._v("当需要使用数组的多个值时，请同样使用解构赋值，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/prefer-destructuring",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefer-destructuring"),n("OutboundLink")],1)]),t._m(78)]),t._m(79)]),t._m(80),t._m(81),n("h3",{attrs:{id:"字符串"}},[t._v("字符串")]),n("ul",[n("li",[n("p",[t._v("字符串统一使用单引号的形式 "),n("code",[t._v("''")]),t._v("，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/quotes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("quotes"),n("OutboundLink")],1)]),t._m(82)]),t._m(83),n("li",[n("p",[t._v("程序化生成字符串时，请使用模板字符串，eslint: "),n("a",{attrs:{href:"http://eslint.org/docs/rules/prefer-template.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefer-template"),n("OutboundLink")],1),n("a",{attrs:{href:"https://eslint.org/docs/rules/template-curly-spacing",target:"_blank",rel:"noopener noreferrer"}},[t._v("template-curly-spacing"),n("OutboundLink")],1)]),t._m(84)]),n("li",[n("p",[t._v("不要对字符串使用eval()，会导致太多漏洞， eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-eval",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-eval"),n("OutboundLink")],1)])]),n("li",[n("p",[t._v("不要在字符串中使用不必要的转义字符， eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-useless-escape",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-useless-escape"),n("OutboundLink")],1)])])]),t._m(85),n("h3",{attrs:{id:"函数"}},[t._v("函数")]),n("ul",[n("li",[t._v("不要使用Function构造函数创建函数， eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-new-func",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-new-func"),n("OutboundLink")],1)])]),t._m(86),t._m(87),n("ul",[n("li",[t._v("在函数签名中使用空格，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/space-before-function-paren",target:"_blank",rel:"noopener noreferrer"}},[t._v("space-before-function-paren"),n("OutboundLink")],1),n("a",{attrs:{href:"https://eslint.org/docs/rules/space-before-blocks",target:"_blank",rel:"noopener noreferrer"}},[t._v("space-before-blocks"),n("OutboundLink")],1)])]),t._m(88),n("ul",[n("li",[t._v("使用具名函数表达式而非函数声明，eslint: "),n("a",{attrs:{href:"http://eslint.org/docs/rules/func-style",target:"_blank",rel:"noopener noreferrer"}},[t._v("func-style"),n("OutboundLink")],1)])]),t._m(89),t._m(90),n("ul",[n("li",[t._v("用圆括号包裹自执行匿名函数，eslint："),n("a",{attrs:{href:"http://eslint.org/docs/rules/wrap-iife.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("wrap-iife"),n("OutboundLink")],1)])]),t._m(91),t._m(92),n("ul",[n("li",[n("p",[t._v("不要在非函数代码块（"),n("code",[t._v("if")]),t._v(" , "),n("code",[t._v("while")]),t._v(" 等）中声明函数，eslint："),n("a",{attrs:{href:"http://eslint.org/docs/rules/no-loop-func.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-loop-func"),n("OutboundLink")],1)]),t._m(93)]),t._m(94)]),t._m(95),t._m(96),t._m(97),t._m(98),t._m(99),t._m(100),t._m(101),n("ul",[n("li",[t._v("不要更改参数，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-param-reassign.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-param-reassign"),n("OutboundLink")],1)])]),t._m(102),t._m(103),n("ul",[n("li",[t._v("不要给参数重新赋值，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-param-reassign.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-param-reassign"),n("OutboundLink")],1)])]),t._m(104),t._m(105),n("ul",[n("li",[t._v("调用可变参数函数时建议使用展开运算符 "),n("code",[t._v("....")]),t._v("， eslint: "),n("a",{attrs:{href:"http://eslint.org/docs/rules/prefer-spread",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefer-spread"),n("OutboundLink")],1)])]),t._m(106),t._m(107),n("h3",{attrs:{id:"箭头函数"}},[t._v("箭头函数")]),n("ul",[n("li",[t._v("当你必须使用函数表达式（传递匿名函数）时，使用箭头函数标记. eslint: "),n("a",{attrs:{href:"http://eslint.org/docs/rules/prefer-arrow-callback.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefer-arrow-callback"),n("OutboundLink")],1),t._v(", "),n("a",{attrs:{href:"https://eslint.org/docs/rules/arrow-spacing.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("arrow-spacing"),n("OutboundLink")],1)])]),t._m(108),t._m(109),t._m(110),n("ul",[n("li",[t._v("如果函数体只包含一条没有副作用的返回表达式的语句，可以省略花括号并使用隐式的 "),n("code",[t._v("return")]),t._v("， 否则保留花括号并使用 "),n("code",[t._v("return")]),t._v(" 语句，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/arrow-parens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("arrow-parens"),n("OutboundLink")],1),t._v(", "),n("a",{attrs:{href:"https://eslint.org/docs/rules/arrow-body-style.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("arrow-body-style"),n("OutboundLink")],1)])]),t._m(111),t._m(112),t._m(113),n("ul",[n("li",[t._v("函数如果只接收一个参数并且没使用用花括号，则省略圆括号，否则为了清晰明确则使用圆括号包裹参数，注意：总是使用圆括号也是可以接受的，eslint 中的 "),n("a",{attrs:{href:"https://eslint.org/docs/rules/arrow-parens#always",target:"_blank",rel:"noopener noreferrer"}},[t._v("“always” 选项"),n("OutboundLink")],1),t._v("，eslint: "),n("a",{attrs:{href:"http://eslint.org/docs/rules/arrow-parens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("arrow-parens"),n("OutboundLink")],1)])]),t._m(114),n("h3",{attrs:{id:"类-构造函数"}},[t._v("类&构造函数")]),t._m(115),t._m(116),t._m(117),n("ul",[n("li",[t._v("如果未声明构造函数，则类会有一个默认的构造函数，没必要用空的构造函数或者将其委托给父类，eslint: "),n("a",{attrs:{href:"http://eslint.org/docs/rules/no-useless-constructor",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-useless-constructor"),n("OutboundLink")],1)])]),t._m(118),n("ul",[n("li",[t._v("避免类成员重复，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-dupe-class-members",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-dupe-class-members"),n("OutboundLink")],1)])]),t._m(119),t._m(120),n("h3",{attrs:{id:"模块"}},[t._v("模块")]),t._m(121),t._m(122),t._m(123),n("ul",[t._m(124),n("li",[n("p",[t._v("同个文件每个模块只允许 "),n("code",[t._v("import")]),t._v(" 一次，有多个 "),n("code",[t._v("import")]),t._v(" 请书写在一起，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-duplicate-imports",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-duplicate-imports"),n("OutboundLink")],1)])])]),t._m(125),t._m(126),n("ul",[n("li",[t._v("将所有 "),n("code",[t._v("import")]),t._v(" 语句放在文件最前方，eslint: "),n("a",{attrs:{href:"https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/first.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("import/imports-first"),n("OutboundLink")],1)])]),t._m(127),t._m(128),t._m(129),n("ul",[n("li",[t._v("在模块 "),n("code",[t._v("import")]),t._v(" 声明中禁止使用 "),n("code",[t._v("Webpack")]),t._v(" 的 "),n("code",[t._v("loader")]),t._v(" 语法，eslint: "),n("a",{attrs:{href:"https://github.com/benmosher/eslint-plugin-import/blob/master/docs/rules/no-webpack-loader-syntax.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("import/no-webpack-loader-syntax"),n("OutboundLink")],1)])]),t._m(130),n("h3",{attrs:{id:"迭代器"}},[t._v("迭代器")]),n("ul",[n("li",[t._v("不要使用 "),n("code",[t._v("iterators")]),t._v("，建议使用 JS 更高优先级的函数代替 for-in 或 for-of 循环，除非迫不得已，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-iterator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-iterator"),n("OutboundLink")],1),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-restricted-syntax",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-restricted-syntax"),n("OutboundLink")],1)])]),n("blockquote"),t._m(131),n("h3",{attrs:{id:"生成器"}},[t._v("生成器")]),t._m(132),t._m(133),n("h3",{attrs:{id:"对象属性"}},[t._v("对象属性")]),t._m(134),t._m(135),n("h3",{attrs:{id:"变量声明"}},[t._v("变量声明")]),n("ul",[n("li",[n("p",[t._v("声明变量时，请使用 "),n("code",[t._v("const")]),t._v("、"),n("code",[t._v("let")]),t._v(" 关键字，如果没有写关键字，变量就会暴露在全局上下文中，这样很可能会和现有变量冲突，另外，也很难明确该变量的作用域是什么。这里推荐使用 "),n("code",[t._v("const")]),t._v(" 来声明变量，我们需要避免全局命名空间的污染。eslint: "),n("a",{attrs:{href:"http://eslint.org/docs/rules/no-undef",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-undef"),n("OutboundLink")],1),n("a",{attrs:{href:"http://eslint.org/docs/rules/prefer-const",target:"_blank",rel:"noopener noreferrer"}},[t._v("prefer-const"),n("OutboundLink")],1)]),t._m(136)]),t._m(137),t._m(138)]),t._m(139),t._m(140),n("ul",[n("li",[t._v("不允许出现未被使用的变量，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/no-unused-vars",target:"_blank",rel:"noopener noreferrer"}},[t._v("no-unused-vars"),n("OutboundLink")],1)])]),t._m(141),t._m(142),n("h3",{attrs:{id:"hoisting"}},[t._v("Hoisting")]),n("ul",[n("li",[n("p",[n("code",[t._v("var")]),t._v(" 存在变量提升的情况，即 "),n("code",[t._v("var")]),t._v(" 声明会被提升至该作用域的顶部，但是他们的赋值并不会。而 "),n("code",[t._v("const")]),t._v(" 和 "),n("code",[t._v("let")]),t._v(" 并不存在这种情况，他们被赋予了 "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#Temporal_dead_zone_and_errors_with_let",target:"_blank",rel:"noopener noreferrer"}},[t._v("Temporal Dead Zones, TDZ"),n("OutboundLink")],1),t._v("， 了解 "),n("a",{attrs:{href:"http://es-discourse.com/t/why-typeof-is-no-longer-safe/15",target:"_blank",rel:"noopener noreferrer"}},[t._v("typeof 不再安全"),n("OutboundLink")],1),t._v("很重要")]),t._m(143)]),t._m(144),t._m(145)]),n("h3",{attrs:{id:"比较运算符-相等"}},[t._v("比较运算符&相等")]),n("ul",[n("li",[n("p",[t._v("使用 "),n("code",[t._v("===")]),t._v(" 和 "),n("code",[t._v("!==")]),t._v(" 而非 "),n("code",[t._v("==")]),t._v(" 和 "),n("code",[t._v("!=")]),t._v("，eslint: "),n("a",{attrs:{href:"https://eslint.org/docs/rules/eqeqeq.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("eqeqeq"),n("OutboundLink")],1)])]),t._m(146)]),n("h3",{attrs:{id:"分号"}},[t._v("分号")]),t._m(147),n("h3",{attrs:{id:"标准特性"}},[t._v("标准特性")]),t._m(148),n("h3",{attrs:{id:"eval"}},[t._v("eval()")]),t._m(149),n("h3",{attrs:{id:"with"}},[t._v("with() {}")]),t._m(150),n("h3",{attrs:{id:"修改内置对象的原型"}},[t._v("修改内置对象的原型")]),t._m(151),n("h2",{attrs:{id:"typescript"}},[t._v("Typescript")]),n("p",[t._v("1、组件的 props 要写清楚类型，function 回调需要精确到参数类型")]),t._m(152),n("p",[t._v("3、Reducer State 使用规范：")]),t._m(153),t._m(154),t._m(155),t._m(156),t._m(157),n("p",[n("a",{attrs:{href:"https://typescript.bootcss.com/declaration-files/do-s-and-don-ts.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网规范"),n("OutboundLink")],1)]),n("h2",{attrs:{id:"移动端优化"}},[t._v("移动端优化")]),n("h4",{attrs:{id:"click-的-300ms-延迟响应"}},[t._v("click 的 300ms 延迟响应")]),n("p",[t._v("click 的 300ms 延迟是由双击缩放(double tap to zoom)所导致的，使用 FastClick")]),n("h4",{attrs:{id:"快速回弹滚动"}},[t._v("快速回弹滚动")]),t._m(158),n("h4",{attrs:{id:"设备检测"}},[t._v("设备检测")]),t._m(159),n("h4",{attrs:{id:"清除输入框内阴影"}},[t._v("清除输入框内阴影")]),t._m(160),n("h4",{attrs:{id:"电话号码识别"}},[t._v("电话号码识别")]),t._m(161),n("h4",{attrs:{id:"邮箱地址的识别"}},[t._v("邮箱地址的识别")]),t._m(162),n("h4",{attrs:{id:"指定-ios-的-safari-顶端状态条的样式"}},[t._v("指定 iOS 的 safari 顶端状态条的样式")]),t._m(163),n("h2",{attrs:{id:"react-jsx"}},[t._v("React&JSX")]),n("h3",{attrs:{id:"组件"}},[t._v("组件")]),t._m(164),t._m(165),n("p",[t._v("3、为权限控制，在小粒度的操作组件中加disabled的props")]),n("p",[t._v("4、使用纯函数创建 React 组件时，不要使用箭头函数（因为它不能得到 displayName）")]),n("p",[t._v("5、禁止出现 warning，一定要解决")]),t._m(166),t._m(167),n("p",[t._v("8、组件文件，命名使用 PascalCase，组件引用 PascalCase")]),n("h3",{attrs:{id:"通用"}},[t._v("通用")]),n("p",[t._v("1、render函数放在最后，顺序是propTypes, props和state的初始化, component初始化，其它方法")]),t._m(168),n("p",[t._v("3、bool 类变量，开头只有三种，is，has，can")]),n("p",[t._v("4、子传递回调最多两次，一般情况下也要避免回传两次")]),n("p",[t._v("5、数据一般情况都是以Props传入，如频繁更新或特殊情况，如子模块依赖Model，使用State")]),t._m(169),t._m(170),n("p",[t._v("8、定义ref 的名称， 要以ref 开头的驼峰; 如:  refGraphToolsCont")]),n("h2",{attrs:{id:"vue"}},[t._v("Vue")]),n("p",[n("a",{attrs:{href:"https://cn.vuejs.org/v2/style-guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("风格指南"),n("OutboundLink")],1)]),n("h2",{attrs:{id:"git-仓库分支名规范"}},[t._v("Git 仓库分支名规范")]),t._m(171),n("h2",{attrs:{id:"git-commit-建议"}},[t._v("Git Commit 建议")]),t._m(172),n("p",[t._v("完整的规范如下")]),t._m(173)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Airbnb ES6 规范：https://github.com/airbnb/javascript")]),e("li",[this._v("Airbnb React 规范：https://github.com/airbnb/javascript/tree/master/react")]),e("li",[this._v("TS 校验lint库: http://gitlab.alibaba-inc.com/dt-npm/tslint")]),e("li",[this._v("TypeScript dos and don’t https://www.typescriptlang.org/docs/handbook/declaration-files/do-s-and-don-ts.html")]),e("li",[this._v("react-redux-typescript-guide https://github.com/piotrwitek/react-redux-typescript-guide")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[t._v("1、字符串中使用单引号 "),n("code",[t._v("'")]),t._v("，JSX 中使用双引号 "),n("code",[t._v('"')])]),n("li",[t._v("2、采用两格空格缩进")]),n("li",[n("strong",[t._v("3")]),t._v("、方法体控制在一屏内显示 (30行左右)，使用两次的逻辑，进行封装抽离")]),n("li",[t._v("4、直接使用 this，不要使用 that/self/me。"),n("s",[t._v("统一使用self替代外层scope的this")])]),n("li",[t._v("5、代码具有连续性，避免无意义的换行")]),n("li",[t._v("6、用 es5-shim 和 es6-shim 里的方法，而不是lodash或jquery的同名方法，如 "),n("code",[t._v("forEach")]),t._v(", "),n("code",[t._v("bind")])]),n("li",[n("strong",[t._v("7")]),t._v("、回调原则上不允许超过两层，三层必须用promise处理，建议使用 async await")]),n("li",[n("strong",[t._v("8")]),t._v("、component命令方式一率用大驼峰，目录用小写加横杠")]),n("li",[t._v("9、统一使用unix换行符，即/n")]),n("li",[t._v("10、不要使用 getter/setter，使用明确的 method")]),n("li",[t._v("11、使用 "),n("code",[t._v("===")]),t._v(" 和 "),n("code",[t._v("!==")]),t._v(" 替换 "),n("code",[t._v("==")]),t._v(" 和 "),n("code",[t._v("!=")]),t._v("，只有在判断 "),n("code",[t._v("undefined")]),t._v(" 和 "),n("code",[t._v("null")]),t._v(" 时除外，用 "),n("code",[t._v("undefOrNull == null")])]),n("li",[t._v("12、顶层函数定义使用 "),n("code",[t._v("function name(param1) {}")]),t._v("，不要使用 arrow function")]),n("li",[t._v("13、文件头部需要添加作者信息，以便于快速联系，author 可以是一个也可以是多个，格式如下：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("/**\n * @file 表格显示组件（简要描述下文件功能和应用场景）\n  * @author Alex\n */\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("<!DOCTYPE html>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<html lang="zh-CN">\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<meta charset="UTF-8">\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<title>Style Guide</title> \n<meta name="keywords" content="keywords"> \n<meta name="description" content="description"> \n<meta name="author" content="author,email address">\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("空元素：area、base、br、col、command、embed、hr、img、input、keygen、link、meta、param、source、track、wbr")]),e("li",[this._v("原始文本元素：script、style")]),e("li",[this._v("RCDATA元素：textarea、title")]),e("li",[this._v("外来元素：来自MathML命名空间和SVG命名空间的元素。")]),e("li",[this._v("常规元素：其他HTML允许的元素都称为常规元素。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("为了能让浏览器更好的解析代码以及能让代码具有更好的可读性，如下约定：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("所有具有开始标签和结束标签的元素都要写上起止标签，某些允许省略开始标签或和束标签的元素亦都要写上")]),e("li",[this._v("空元素标签都不加 “/” 字符")]),e("li",[this._v("尽量减少标签数量")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<div class="demo"></div>\n\n\x3c!-- 优先使用 IE 最新版本和 Chrome Frame --\x3e\n<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/>\n\n\x3c!-- HTML文本内容 --\x3e\n<h1>I AM WHAT I AM </h1>\n\n\x3c!-- JavaScript 内容 --\x3e\n<script type="text/javascript">\n\tvar demoName = \'demoName\';\n\t...\n<\/script>\n\t\n\x3c!-- CDATA 内容 --\x3e\n<script type="text/javascript"><![CDATA[\n...\n]]><\/script>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("class 应以功能或内容命名，不以表现形式命名；")]),e("li",[this._v("class 与 id 单词字母小写，多个单词组成时，采用中划线 - 分隔；")]),e("li",[this._v("使用唯一的 id 作为 Javascript hook, 同时避免创建无样式信息的 class；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<div id="j-hook" class="sidebar content-wrapper"></div> \n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('不推荐：type可以省略\n\n<link rel="stylesheet" type="text/css" href="" >\n<script type="text/javascript" src="" ><\/script>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(' <span id="j-hook" class="text">Google</span>\n <input type="text" disabled>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("a 不允许嵌套 div")]),this._v(" 这种约束属于语义嵌套约束，与之区别的约束还有严格嵌套约束，比如 "),e("code",[this._v("a 不允许嵌套 a")]),this._v(" 。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("语义嵌套约束")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("<li> 用于 <ul> 或 <ol> 下\n")])])])]),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("<dd> , <dt> 用于 <dl> 下；\n")])])])]),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("<thead> , <tbody> , <tfoot> , <tr> , <td> 用于 <table> 下； \n")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("严格嵌套约束")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("inline-Level 元素，仅可以包含文本或其它 inline-Level 元素;")])]),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("a里不可以嵌套交互式元素 a,button,select 等;  \n")])])])]),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("p里不可以嵌套块级元素 div,h1~h6,p,ui,ol,li,dl,dt,dd,from等\n")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("viewport : 一般指的是浏览器窗口内容区的大小，不包含工具条、选项卡等内容；")]),e("li",[this._v("width : 浏览器宽度，输出设备中的页面可见区域宽度；")]),e("li",[this._v("device-width : 设备分辨率宽度，输出设备的屏幕可见宽度；")]),e("li",[this._v("initial-scale : 初始缩放比例；")]),e("li",[this._v("maximum-scale : 最大缩放比例；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<meta name="viewport" content="width=device-width, initial-scale=1.0">\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("apple-touch-icon 图片自动处理成圆角和高光等效果;")])]),e("li",[e("p",[this._v("apple-touch-icon-precomposed 禁止系统自动添加效果，直接显示设计原图;")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('\x3c!-- iPhone 和 iTouch，默认 57x57 像素，必须有 --\x3e \n<link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-57x57- precomposed.png"> \n\n\x3c!-- iPad，72x72 像素，可以没有，但推荐有 --\x3e \n<link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-72x72- precomposed.png" sizes="72x72"> \n\n\x3c!-- Retina iPhone 和 Retina iTouch，114x114 像素，可以没有，但推荐有 --\x3e \n<link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-114x114- precomposed.png" sizes="114x114"> \n\n\x3c!-- Retina iPad，144x144 像素，可以没有，但推荐有 --\x3e \n<link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-144x144- precomposed.png" sizes="144x144">\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("在 Web Server 根目录放置 favicon.ico 文件；")]),e("li",[this._v("使用 link 指定 favicon；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<link rel="shortcut icon" href="path/favicon.ico">\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<!DOCTYPE html> \n<html lang="zh-cmn-Hans"> \n\t<head>\n\t\t<meta charset="utf-8"> \n\t\t<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> \n\t\t<title>不超过60个字符</title> \n\t\t<meta name="description" content="不超过160个字符"> \n\t\t<meta name="keywords" content="k1,k2,关键词组，不超过60个字符"> \n\t\t<meta name="author" content="name, email@gmail.com"> \n\t\t\x3c!-- 为移动设备添加 viewport --\x3e \n\t\t<meta name="viewport" content="width=device-width, initial-scale=1.0"> \n\t\t\x3c!-- iOS 图标 --\x3e \n\t\t<link rel="apple-touch-icon-precomposed" href="/apple-touch-icon-57x57- precomposed.png"> \n\t\t<link rel="alternate" type="application/rss+xml" title="RSS" href="/rss.xml" /> \n\t\t<link rel="shortcut icon" href="path/to/favicon.ico"> \n\t</head>\n</html>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("使用语义化、通用的命名方式；")]),e("li",[this._v("使用连字符 - 作为 ID、Class 名称界定符，不要驼峰命名法和下划线；")]),e("li",[this._v("避免选择器嵌套层级过多，尽量少于 3 级，最多不超过 7 级；")]),e("li",[this._v("避免选择器和 Class、ID 叠加使用；")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[t._v("选择器分组时，保持独立的选择器占用一行；")]),n("li",[t._v("声明块的左括号 { 前添加一个空格；")]),n("li",[t._v("声明块的右括号 } 应单独成行；")]),n("li",[t._v("声明语句中的 : 后应添加一个空格；")]),n("li",[t._v("声明语句应以分号 ; 结尾；")]),n("li",[t._v("一般以逗号分隔的属性值，每个逗号后应添加一个空格；")]),n("li",[t._v("rgb() 、 rgba() 、 hsl() 、 hsla() 或 rect() 括号内的值，逗号分隔，但逗号后不添加一个空格；")]),n("li",[t._v("对于属性值或颜色参数，省略小于 1 的小数前面的 0 （例如， .5 代替 0.5 ； -.5px 代替 -0.5px ）；")]),n("li",[t._v("十六进制值应该全部小写和尽量简写，例如， #fff 代替 #ffffff ；")]),n("li",[t._v("避免为 0 值指定单位，例如，用 margin: 0; 代替 margin: 0px;")]),n("li",[t._v("代码缩进，2 或 4个空格，推荐2个空格")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Positioning")]),e("li",[this._v("Box model")]),e("li",[this._v("Typographic")]),e("li",[this._v("Visual")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('.declaration-order { \n\n\t/* Positioning */ \n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tz-index: 100;\n\t\n\t/* Box model */\n  display: block;\n  box-sizing: border-box;\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  border: 1px solid #e5e5e5;\n  border-radius: 3px;\n  margin: 10px;\n  float: right;\n  overflow: hidden;\n  \n  /* Typographic */ \n  font: normal 13px "Helvetica Neue", sans-serif; \n  line-height: 1.5;\n  text-align: center; \n  \n  /* Visual */ \n  background-color: #f5f5f5; \n  color: #fff;\n  opacity: .8; \n  \n  /* Other */\n  cursor: pointer;\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("a:link -> a:visited -> a:hover -> a:active（LoVeHAte）\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("使用 "),e("strong",[this._v("Autoprefixer")]),this._v(" 自动添加浏览器厂商前缀")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(".box {\n    -webkit-border-radius: 10px;\n    -moz-border-radius: 10px;\n    -o-border-radius: 10px;\n    -ms-border-radius: 10px;\n    border-radius: 10px;\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("box-shadows")]),e("li",[this._v("border-radius")]),e("li",[this._v("transparency")]),e("li",[this._v("transforms")]),e("li",[this._v("CSS filters（性能杀手）")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[t._v("width")]),n("li",[t._v("height")]),n("li",[t._v("padding")]),n("li",[t._v("margin")]),n("li",[t._v("display")]),n("li",[t._v("border-width")]),n("li",[t._v("position")]),n("li",[t._v("top")]),n("li",[t._v("left")]),n("li",[t._v("right")]),n("li",[t._v("bottom")]),n("li",[t._v("font-size")]),n("li",[t._v("float")]),n("li",[t._v("text-align")]),n("li",[t._v("overflow-y")]),n("li",[t._v("font-weight")]),n("li",[t._v("overflow")]),n("li",[t._v("font-family")]),n("li",[t._v("line-height")]),n("li",[t._v("vertical-align")]),n("li",[t._v("clear")]),n("li",[t._v("white-space")]),n("li",[t._v("min-height")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("display: inline后不应该再使用 width、height、margin、padding 以及 float；")]),e("li",[this._v("display: inline-block 后不应该再使用 float；")]),e("li",[this._v("display: block 后不应该再使用 vertical-align；")]),e("li",[this._v("display: table-* 后不应该再使用 margin 或者 float；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("动画的基本概念：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("帧：在动画过程中，每一幅静止画面即为一“帧”;")]),e("li",[this._v("帧率：即每秒钟播放的静止画面的数量，单位是fps(Frame per second);")]),e("li",[this._v("帧时长：即每一幅静止画面的停留时间，单位一般是ms(毫秒);")]),e("li",[this._v("跳帧(掉帧/丢帧)：在帧率固定的动画中，某一帧的时长远高于平均帧时长，导致其后续数帧被挤压而丢失的现")]),e("li",[this._v("象。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("如果使用基于 javaScript 的动画，尽量使用 requestAnimationFrame. 避免使用 setTimeout, setInterval.")]),e("li",[this._v("避免通过类似 jQuery animate()-style 改变每帧的样式，使用 CSS 声明动画会得到更好的浏览器优化。")]),e("li",[this._v("使用 translate 取代 absolute 定位就会得到更好的 fps，动画会更顺滑。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注：3D 变形会消耗更多的内存和功耗。")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("原始类型: 存取原始类型直接作用于值本身")]),n("ul",[n("li",[t._v("布尔类型")]),n("li",[t._v("Null 类型")]),n("li",[t._v("Undefined 类型")]),n("li",[t._v("数字类型")]),n("li",[t._v("BigInt 类型")]),n("li",[t._v("字符串类型")]),n("li",[t._v("符号类型 Symbol")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const foo = 1\nlet bar = foo\n\nbar = 9\n\nconsole.log(foo, bar) // 1, 9\n")])])])]),n("li",[n("p",[t._v("复杂类型: 访问复杂类型作用于值的引用")]),n("ul",[n("li",[t._v("object")]),n("li",[t._v("array")]),n("li",[t._v("function")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const foo = [1, 2, 3]\nconst bar = foo\n\nbar[0] = 9\n\nconsole.log(foo[0], bar[0]) // 9, 9\n")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("请记得 "),e("code",[this._v("const")]),this._v(" 和 "),e("code",[this._v("let")]),this._v(" 都是块级作用域，"),e("code",[this._v("var")]),this._v(" 是函数级作用域")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// const and let only exist in the blocks they are defined in.\n{\n  let a = 1\n  const b = 1\n}\nconsole.log(a) // ReferenceError\nconsole.log(b) // ReferenceError\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：这样做可以确保你无法重新分配引用，以避免出现错误和难以理解的代码")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nvar a = 1\nvar b = 2\n\n// good\nconst a = 1\nconst b = 2\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因："),e("code",[this._v("let")]),this._v(" 是块级作用域的，而不像 "),e("code",[this._v("var")]),this._v(" 属于函数级作用域")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nvar count = 1\nif (count < 10) {\n  count += 1\n}\n\n// good\nlet count = 1\nif (count < 10) {\n  count += 1\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst a = new Object{}\n\n// good\nconst a = {}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("别使用保留字作为对象的键值，这样在 IE8 下不会运行")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst a = {\n  default: {},  // default 是保留字\n  common: {}\n}\n\n// good\nconst a = {\n  defaults: {},\n  common: {}\n}\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("当使用动态属性名创建对象时，请使用对象计算属性名来进行创建")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：因为这样做就可以让你在一个地方定义所有的对象属性")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function getKey(k) {\n  return `a key named ${k}`\n}\n\n// bad\nconst obj = {\n  id: 5,\n  name: 'San Francisco'\n};\nobj[getKey('enabled')] = true\n\n// good\nconst obj = {\n  id: 5,\n  name: 'San Francisco',\n  [getKey('enabled')]: true\n};\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst item = {\n  value: 1,\n\n  addValue: function (val) {\n    return item.value + val\n  }\n}\n\n// good\nconst item = {\n  value: 1,\n\n  addValue (val) {\n    return item.value + val\n  }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：这样更简短且描述更清楚")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const job = 'FrontEnd'\n\n// bad\nconst item = {\n  job: job\n}\n\n// good\nconst item = {\n  job\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("将简写的对象属性分组后统一放到对象声明的开头")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：这样更容易区分哪些属性用了简写的方式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const job = 'FrontEnd'\nconst department = 'JDC'\n\n// bad\nconst item = {\n  sex: 'male',\n  job,\n  age: 25,\n  department\n}\n\n// good\nconst item = {\n  job,\n  department,\n  sex: 'male',\n  age: 25\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：因为通常来说我们认为这样主观上会更容易阅读，这样会带来代码高亮上的提升，同时也更容易被主流 JS 引擎优化")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst bad = {\n  'foo': 3,\n  'bar': 4,\n  'data-blah': 5\n}\n\n// good\nconst good = {\n  foo: 3,\n  bar: 4,\n  'data-blah': 5\n}\n")])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("不要直接使用")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Object.prototype\n")])])]),n("p",[t._v("的方法, 例如")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("hasOwnProperty\n")])])]),n("p",[t._v(",")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("propertyIsEnumerable\n")])])]),n("p",[t._v("和")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("isPrototypeOf\n")])])]),n("p",[t._v("方法，eslint:")]),n("p",[t._v("no-prototype-builtins")]),n("blockquote",[n("p",[t._v("原因：这些方法可能会被对象自身的同名属性覆盖 - 比如 "),n("code",[t._v("{ hasOwnProperty: false }")]),t._v(" 或者对象可能是一个 "),n("code",[t._v("null")]),t._v(" 对象("),n("code",[t._v("Object.create(null)")]),t._v(")")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconsole.log(object.hasOwnProperty(key))\n\n// good\nconsole.log(Object.prototype.hasOwnProperty.call(object, key))\n\n// best\nconst has = Object.prototype.hasOwnProperty // cache the lookup once, in module scope.\nconsole.log(has.call(object, key))\n/* or */\nimport has from 'has' // https://www.npmjs.com/package/has\nconsole.log(has(object, key))\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("优先使用对象展开运算符 "),e("code",[this._v("...")]),this._v(" 来做对象浅拷贝而不是使用 "),e("code",[this._v("Object.assign")]),this._v("，使用对象剩余操作符来获得一个包含确定的剩余属性的新对象")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// very bad\nconst original = { a: 1, b: 2 }\nconst copy = Object.assign(original, { c: 3 }) // this mutates `original` ಠ_ಠ\ndelete copy.a // so does this\n\n// bad\nconst original = { a: 1, b: 2 }\nconst copy = Object.assign({}, original, { c: 3 }) // copy => { a: 1, b: 2, c: 3 }\n\n// good\nconst original = { a: 1, b: 2 }\nconst copy = { ...original, c: 3 } // copy => { a: 1, b: 2, c: 3 }\n\nconst { a, ...noA } = copy // noA => { b: 2, c: 3 }\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst items = new Array()\n\n// good\nconst items = []\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("向数组中添加元素时，请使用 "),e("code",[this._v("push")]),this._v(" 方法")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const items = []\n\n// bad\nitems[items.length] = 'test'\n\n// good\nitems.push('test')\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("使用展开运算符 "),e("code",[this._v("...")]),this._v(" 复制数组")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst items = []\nconst itemsCopy = []\nconst len = items.length\nlet i\n\n// bad\nfor (i = 0; i < len; i++) {\n  itemsCopy[i] = items[i]\n}\n\n// good\nitemsCopy = [...items]\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("把一个可迭代的对象转换为数组时，使用展开运算符 "),e("code",[this._v("...")]),this._v(" 而不是 "),e("code",[this._v("Array.from")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const foo = document.querySelectorAll('.foo')\n\n// good\nconst nodes = Array.from(foo)\n\n// best\nconst nodes = [...foo]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("使用 "),e("code",[this._v("Array.from")]),this._v(" 来将一个类数组对象转换为数组")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const arrLike = { 0: 'foo', 1: 'bar', 2: 'baz', length: 3 }\n\n// bad\nconst arr = Array.prototype.slice.call(arrLike)\n\n// good\nconst arr = Array.from(arrLike)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("遍历迭代器进行映射时使用 "),e("code",[this._v("Array.from")]),this._v(" 代替扩展运算符 "),e("code",[this._v("...")]),this._v(", 因为这可以避免创建中间数组")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst baz = [...foo].map(bar)\n\n// good\nconst baz = Array.from(foo, bar)\n")])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("使用数组的 "),n("code",[t._v("map")]),t._v(" 等方法时，请使用 "),n("code",[t._v("return")]),t._v(" 声明，如果是单一声明语句的情况，可省略 "),n("code",[t._v("return")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// good\n[1, 2, 3].map(x => {\n  const y = x + 1\n  return x * y\n})\n\n// good\n[1, 2, 3].map(x => x + 1)\n\n// bad\nconst flat = {}\n[[0, 1], [2, 3], [4, 5]].reduce((memo, item, index) => {\n  const flatten = memo.concat(item)\n  flat[index] = flatten\n})\n\n// good\nconst flat = {}\n[[0, 1], [2, 3], [4, 5]].reduce((memo, item, index) => {\n  const flatten = memo.concat(item)\n  flat[index] = flatten\n  return flatten\n})\n\n// bad\ninbox.filter((msg) => {\n  const { subject, author } = msg\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee'\n  } else {\n    return false\n  }\n})\n\n// good\ninbox.filter((msg) => {\n  const { subject, author } = msg\n  if (subject === 'Mockingbird') {\n    return author === 'Harper Lee'\n  }\n\n  return false\n})\n")])])])]),n("li",[n("p",[t._v("如果一个数组有多行则要在数组的开括号后和闭括号前使用新行")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst arr = [\n  [0, 1], [2, 3], [4, 5]\n]\n\nconst objectInArray = [{\n  id: 1\n}, {\n  id: 2\n}]\n\nconst numberInArray = [\n  1, 2\n]\n\n// good\nconst arr = [[0, 1], [2, 3], [4, 5]]\n\nconst objectInArray = [\n  {\n    id: 1\n  },\n  {\n    id: 2\n  }\n]\n\nconst numberInArray = [\n  1,\n  2\n]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("愿意：解构可以避免创建属性的临时引用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nfunction getFullName (user) {\n  const firstName = user.firstName\n  const lastName = user.lastName\n\n  return `${firstName} ${lastName}`\n}\n\n// good\nfunction getFullName (user) {\n  const { firstName, lastName } = user\n\n  return `${firstName} ${lastName}`\n}\n\n// better\nfunction getFullName ({ firstName, lastName }) {\n  return `${firstName} ${lastName}`\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const arr = [1, 2, 3, 4]\n\n// bad\nconst first = arr[0]\nconst second = arr[1]\n\n// good\nconst [first, second] = arr\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("函数需要回传多个值时，请使用对象的解构，而不是数组的解构")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：可以非破坏性地随时增加或者改变属性顺序")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nfunction doSomething () {\n  return [top, right, bottom, left]\n}\n\n// 如果是数组解构，那么在调用时就需要考虑数据的顺序\nconst [top, xx, xxx, left] = doSomething()\n\n// good\nfunction doSomething () {\n  return { top, right, bottom, left }\n}\n\n// 此时不需要考虑数据的顺序\nconst { top, left } = doSomething()\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst department = \"JDC\"\n\n// good\nconst department = 'JDC'\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("字符串太长的时候，请不要使用字符串连接符换行 "),e("code",[this._v("\\")]),this._v("，而是使用 "),e("code",[this._v("+")])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const str = '凹凸实验室 凹凸实验室 凹凸实验室' +\n  '凹凸实验室 凹凸实验室 凹凸实验室' +\n  '凹凸实验室 凹凸实验室'\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const test = 'test'\n\n// bad\nconst str = ['a', 'b', test].join()\n\n// bad\nconst str = 'a' + 'b' + test\n\n// good\nconst str = `ab${test}`\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst foo = '\\'this\\' \\i\\s \\\"quoted\\\"'\n\n// good\nconst foo = '\\'this\\' is \"quoted\"'\nconst foo = `my name is '${name}'`\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：此方式创建函数和对字符串使用 "),e("code",[this._v("eval()")]),this._v(" 一样会产生漏洞")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst add = new Function('a', 'b', 'return a + b')\n\n// still bad\nconst subtract = Function('a', 'b', 'return a - b')\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const f = function(){}\nconst g = function (){}\nconst h = function() {}\n\n// good\nconst x = function b () {}\nconst y = function a () {}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：这样做会导致函数声明被提升，这意味着很容易在文件中定义此函数之前引用它，不利于可读性和可维护性。如果你发现函数定义既庞大又复杂以至于不能理解文件的其他部分，或许你应该将它拆分成模块！别忘记要显式命名表达式，而不用管名字是否是从包含的变量（通常出现在现代浏览器中或者使用 Babel 编译器的时候）中推断的。这样会消除错误调用堆栈中的任何假设。 (讨论)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nfunction foo () {\n  // ...\n}\n\n// bad\nconst foo = function () {\n  // ...\n}\n\n// good\n// lexical name distinguished from the variable-referenced invocation(s)\nconst short = function longUniqueMoreDescriptiveLexicalFoo () {\n  // ...\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：一个立即执行匿名函数表达式是一个单一的单元，将其及其调用括号包装在括号中，能够清楚地表达这一点。注意，在到处都是模块的世界中几乎不需要 IIFE。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// immediately-invoked function expression (IIFE)\n(function () {\n  console.log('Welcome to the Internet. Please follow me.')\n}())\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nif (isUse) {\n  function test () {\n    // do something\n  }\n}\n\n// good\nlet test\nif (isUse) {\n  test = () => {\n    // do something\n  }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("不要将参数命名为 "),e("code",[this._v("arguments")]),this._v("，会导致该参数的优先级高于每个函数作用域内原先存在的 "),e("code",[this._v("arguments")]),this._v(" 对象")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nfunction foo (name, options, arguments) {\n  // ...\n}\n\n// good\nfunction foo (name, options, args) {\n  // ...\n}\n")])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("不要使用 "),n("code",[t._v("arguments")]),t._v("，使用 剩余运算符 "),n("code",[t._v("...")])]),n("blockquote",[n("p",[n("code",[t._v("arguments")]),t._v(" 只是一个类数组，而 "),n("code",[t._v("...")]),t._v(" 是一个真正的数组")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// bad\nfunction test () {\n  const args = Array.prototype.slice.call(arguments)\n  return args.join('')\n}\n\n// good\nfunction test (...args) {\n  return args.join('')\n}\n")])])])]),n("li",[n("p",[t._v("使用参数默认值语法而不是修改函数参数")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// really bad\nfunction handleThings (opts) {\n  // No! We shouldn't mutate function arguments.\n  // Double bad: if opts is falsy it'll be set to an object which may\n  // be what you want but it can introduce subtle bugs.\n  opts = opts || {}\n  // ...\n}\n\n// still bad\nfunction handleThings (opts) {\n  if (opts === void 0) {\n    opts = {}\n  }\n  // ...\n}\n\n// good\nfunction handleThings (opts = { }) {\n  // ...\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("避免参数默认值的副作用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let b = 1\n// bad\nfunction count (a = b++) {\n  console.log(a)\n}\ncount()  // 1\ncount()  // 2\ncount(3) // 3\ncount()  // 3\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("将参数默认值放在最后")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nfunction handleThings (opts = {}, name) {\n  // ...\n}\n\n// good\nfunction handleThings (name, opts = {}) {\n  // ...\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：操作作为参数传入的对象可能在原始调用中造成意想不到的变量副作用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nfunction f1 (obj) {\n  obj.key = 1\n}\n\n// good\nfunction f2 (obj) {\n  const key = Object.prototype.hasOwnProperty.call(obj, 'key') ? obj.key : 1\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：参数重新赋值可能会导致无法预期的行为，尤其是当操作 "),e("code",[this._v("arguments")]),this._v(" 对象时，也可能导致优化问题，尤其是在 V8 引擎中")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nfunction f1 (a) {\n  a = 1\n}\n\nfunction f2 (a) {\n  if (!a) { a = 1 }\n}\n\n// good\nfunction f3 (a) {\n  const b = a || 1\n}\n\nfunction f4 (a = 1) {\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：显然你无需使用上下文，很难结合 "),e("code",[this._v("new")]),this._v(" 和 "),e("code",[this._v("apply")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst x = [1, 2, 3, 4, 5]\nconsole.log.apply(console, x)\n\n// good\nconst x = [1, 2, 3, 4, 5]\nconsole.log(...x)\n\n// bad\nnew (Function.prototype.bind.apply(Date, [null, 2016, 8, 5]))\n\n// good\nnew Date(...[2016, 8, 5])\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：它将创建在 "),e("code",[this._v("this")]),this._v(" 上下文中执行的函数版本，通常是您想要的，并且语法更简洁")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("如果您有一个相当复杂的函数，则可以将该逻辑移到其自己的命名函数表达式中")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\n[1, 2, 3].map(function (x) {\n  const y = x + 1\n  return x * y\n})\n\n// good\n[1, 2, 3].map((x) => {\n  const y = x + 1\n  return x * y\n})\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\n[1, 2, 3].map(number => {\n  const nextNumber = number + 1\n  `A string containing the ${nextNumber}.`\n})\n\n// good\n[1, 2, 3].map(number => `A string containing the ${number}.`)\n\n// good\n[1, 2, 3].map((number) => {\n  const nextNumber = number + 1\n  return `A string containing the ${nextNumber}.`\n})\n\n// good\n[1, 2, 3].map((number, index) => ({\n  index: number\n}))\n\n// No implicit return with side effects\nfunction foo(callback) {\n  const val = callback()\n  if (val === true) {\n    // Do something if callback returns true\n  }\n}\n\nlet bool = false\n\n// bad\nfoo(() => bool = true)\n\n// good\nfoo(() => {\n  bool = true\n})\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("一旦表达式跨多行，使用圆括号包裹以便更好阅读")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\n['get', 'post', 'put'].map(httpMethod => Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod\n  )\n)\n\n// good\n['get', 'post', 'put'].map(httpMethod => (\n  Object.prototype.hasOwnProperty.call(\n    httpMagicObjectWithAVeryLongName,\n    httpMethod\n  )\n))\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\n[1, 2, 3].map((x) => x * x)\n\n// good\n[1, 2, 3].map(x => x * x)\n\n// good\n[1, 2, 3].map(number => (\n  `A long string with the ${number}. It’s so long that we’ve broken it ` +\n  'over multiple lines!'\n))\n\n// bad\n[1, 2, 3].map(x => {\n  const y = x + 1\n  return x * y\n})\n\n// good\n[1, 2, 3].map((x) => {\n  const y = x + 1\n  return x * y\n})\n")])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("使用 "),n("code",[t._v("class")]),t._v("，避免直接操作 "),n("code",[t._v("prototype")])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// bad\nfunction Queue (contents = []) {\n  this._queue = [..contents]\n}\nQueue.prototype.pop = function () {\n  const value = this._queue[0]\n  this._queue.splice(0, 1)\n  return value\n}\n\n// good\nclass Queue {\n  constructor (contents = []) {\n    this._queue = [...contents]\n  }\n\n  pop () {\n    const value = this._queue[0]\n    this._queue.splice(0, 1)\n    return value\n  }\n}\n")])])])]),n("li",[n("p",[t._v("使用 "),n("code",[t._v("extends")]),t._v(" 来实现继承")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：这是一个不会破坏 "),e("code",[this._v("instanceof")]),this._v(" 的内建实现原型式继承的方式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst inherits = require('inherits')\nfunction PeekableQueue(contents) {\n  Queue.apply(this, contents)\n}\ninherits(PeekableQueue, Queue)\nPeekableQueue.prototype.peek = function () {\n  return this.queue[0]\n}\n\n// good\nclass PeekableQueue extends Queue {\n  peek () {\n    return this.queue[0]\n  }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nclass Jedi {\n  constructor () {}\n\n  getName() {\n    return this.name\n  }\n}\n\n// bad\nclass Rey extends Jedi {\n  constructor (...args) {\n    super(...args)\n  }\n}\n\n// good\nclass Rey extends Jedi {\n  constructor (...args) {\n    super(...args)\n    this.name = 'Rey'\n  }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：重复的类成员声明会默认使用最后声明的，通常会导致 bug")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nclass Foo {\n  bar () { return 1 }\n  bar () { return 2 }\n}\n\n// good\nclass Foo {\n  bar () { return 1 }\n}\n\n// good\nclass Foo {\n  bar () { return 2 }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("使用标准的 ES6 模块语法 "),e("code",[this._v("import")]),this._v(" 和 "),e("code",[this._v("export")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：模块是未来，让我们现在开始使用未来的特性")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst util = require('./util')\nmodule.exports = util\n\n// good\nimport Util from './util'\nexport default Util\n\n// better\nimport { Util } from './util'\nexport default Util\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("不要使用 "),e("code",[this._v("import")]),this._v(" 的通配符 "),e("code",[this._v("*")]),this._v("，这样可以确保你只有一个默认的 export")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nimport * as Util from './util'\n\n// good\nimport Util from './util'\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：这样可以让代码更易于维护")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nimport foo from 'foo'\n// … some other imports … //\nimport { named1, named2 } from 'foo'\n\n// good\nimport foo, { named1, named2 } from 'foo'\n\n// good\nimport foo, {\n  named1,\n  named2\n} from 'foo'\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nimport foo from 'foo'\nfoo.init()\n\nimport bar from 'bar'\n\n// good\nimport foo from 'foo'\nimport bar from 'bar'\n\nfoo.init()\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("多行导入应该像多行数组和对象文字一样缩进")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nimport { longNameA, longNameB, longNameC, longNameD, longNameE } from 'path'\n\n// good\nimport {\n  longNameA,\n  longNameB,\n  longNameC,\n  longNameD,\n  longNameE\n} from 'path'\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nimport fooSass from 'css!sass!foo.scss'\nimport barCss from 'style!css!bar.css'\n\n// good\nimport fooSass from 'foo.scss'\nimport barCss from 'bar.css'\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const numbers = [1, 2, 3, 4, 5]\n\n// bad\nlet sum = 0\nfor (let num of numbers) {\n  sum += num\n}\n\n// good\nlet sum = 0\nnumbers.forEach(num => sum += num)\n\n// better\nconst sum = numbers.reduce((total, num) => total + num, 0)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("现阶段请不要使用生成器 "),e("code",[this._v("generator")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：因为不能很好地翻译成 ES5 代码")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("使用 "),e("code",[this._v(".")]),this._v(" 来访问对象属性")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const joke = {\n  name: 'haha',\n  age: 28\n}\n\n// bad\nconst name = joke['name']\n\n// good\nconst name = joke.name\n")])])])]),e("li",[e("p",[this._v("当访问的属性是变量时使用 "),e("code",[this._v("[]")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const luke = {\n  jedi: true,\n  age: 28,\n}\n\nfunction getProp (prop) {\n  return luke[prop]\n}\n\nconst isJedi = getProp('jedi')\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\ndemo = new Demo()\n\n// good\nconst demo = new Demo()\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("将所有的 "),e("code",[this._v("const")]),this._v(" 和 "),e("code",[this._v("let")]),this._v(" 分组")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nlet a\nconst b\nlet c\nconst d\nlet e\n\n// good\nconst b\nconst d\nlet a\nlet c\nlet e\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("变量不要进行链式赋值")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：变量链式赋值会创建隐藏的全局变量")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\n(function example() {\n  // JavaScript interprets this as\n  // let a = ( b = ( c = 1 ) );\n  // The let keyword only applies to variable a; variables b and c become\n  // global variables.\n  let a = b = c = 1\n}())\n\nconsole.log(a) // throws ReferenceError\nconsole.log(b) // 1\nconsole.log(c) // 1\n\n// good\n(function example() {\n  let a = 1\n  let b = a\n  let c = a\n}())\n\nconsole.log(a) // throws ReferenceError\nconsole.log(b) // throws ReferenceError\nconsole.log(c) // throws ReferenceError\n\n// the same applies for `const`\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("原因：声明但未被使用的变量通常是不完全重构犯下的错误.这种变量在代码里浪费空间并会给读者造成困扰")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\n\nvar some_unused_var = 42\n\n// Write-only variables are not considered as used.\nvar y = 10\ny = 5\n\n// A read for a modification of itself is not considered as used.\nvar z = 0\nz = z + 1\n\n// Unused function arguments.\nfunction getX (x, y) {\n  return x\n}\n\n// good\n\nfunction getXPlusY (x, y) {\n  return x + y\n}\n\nconst x = 1\nconst y = a + 2\n\nalert(getXPlusY(x, y))\n\n// 'type' is ignored even if unused because it has a rest property sibling.\n// This is a form of extracting an object that omits the specified keys.\nconst { type, ...coords } = data\n// 'coords' is now the 'data' object without its 'type' property.\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function example () {\n  console.log(notDefined)   // => throws a ReferenceError\n}\n\nfunction example () {\n  console.log(declareButNotAssigned)  // => undefined\n  var declaredButNotAssigned = true\n}\n\nfunction example () {\n  let declaredButNotAssigned\n  console.log(declaredButNotAssigned)   // => undefined\n  declaredButNotAssigned = true\n}\n\nfunction example () {\n  console.log(declaredButNotAssigned)   // => throws a ReferenceError\n  console.log(typeof declaredButNotAssigned)  // => throws a ReferenceError\n  const declaredButNotAssigned = true\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("匿名函数的变量名会提升，但函数内容不会")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function example () {\n  console.log(anonymous)  // => undefined\n\n  anonymous()\n\n  var anonymous = function () {\n    console.log('test')\n  }\n}\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("命名的函数表达式的变量名会被提升，但函数名和函数函数内容并不会")]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function example() {\n  console.log(named)  // => undefined\n\n  named()   // => TypeError named is not a function\n\n  superPower()  // => ReferenceError superPower is not defined\n\n  var named = function superPower () {\n    console.log('Flying')\n  }\n}\n\nfunction example() {\n  console.log(named)  // => undefined\n\n  named()   // => TypeError named is not a function\n\n  var named = function named () {\n    console.log('named')\n  }\n}\n")])])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("li",[n("p",[t._v("条件声明例如 "),n("code",[t._v("if")]),t._v(" 会用 "),n("code",[t._v("ToBoolean")]),t._v(" 这个抽象方法将表达式转成布尔值并遵循如下规则")]),n("ul",[n("li",[n("p",[n("code",[t._v("Objects")]),t._v(" 等于 "),n("code",[t._v("true")])])]),n("li",[n("p",[n("code",[t._v("Undefined")]),t._v(" 等于 "),n("code",[t._v("false")])])]),n("li",[n("p",[n("code",[t._v("Null")]),t._v(" 等于 "),n("code",[t._v("false")])])]),n("li",[n("p",[n("code",[t._v("Booleans")]),t._v(" 等于 "),n("code",[t._v("布尔值")])])]),n("li",[n("p",[n("code",[t._v("Numbers")]),t._v(" 在 "),n("code",[t._v("+0")]),t._v(", "),n("code",[t._v("-0")]),t._v(", 或者 "),n("code",[t._v("NaN")]),t._v(" 的情况下等于 "),n("code",[t._v("false")]),t._v(", 其他情况是 "),n("code",[t._v("true")])])]),n("li",[n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Strings\n")])])]),n("p",[t._v("为")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("''\n")])])]),n("p",[t._v("时等于")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("false\n")])])]),n("p",[t._v(", 否则是")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("true\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("if ([0] && []) {\n  // true\n  // 数组(即使是空数组)也是对象，对象等于true\n}\n")])])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("我们遵循 "),e("code",[this._v("Standard")]),this._v(" 的规范，不使用分号。")]),e("blockquote",[e("p",[this._v("关于应不应该使用分号的讨论有很多，本规范认为非必要的时候，应该不使用分号，好的 "),e("code",[this._v("JS")]),this._v(" 程序员应该清楚场景下是一定要加分号的，相信你也是名好的开发者。")])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// bad\nconst test = 'good';\n(function () {\n  const str = 'hahaha';\n})()\n\n// good\nconst test = 'good'\n;(() => {\n  const str = 'hahaha'\n})();\n")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("为了代码的可移植性和兼容性，我们应该最大化的使用标准方法，例如优先使用 "),e("code",[this._v("string.charAt(3)")]),this._v(" 而不是 "),e("code",[this._v("string[3]")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("由于 "),e("code",[this._v("eval")]),this._v(" 方法比较 "),e("code",[this._v("evil")]),this._v("，所以我们约定禁止使用该方法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("由于 "),e("code",[this._v("with")]),this._v(" 方法会产生神奇的作用域，所以我们也是禁止使用该方法的")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("不要修改内置对象，如 "),e("code",[this._v("Object")]),this._v(" 和 "),e("code",[this._v("Array")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("2、对于接收可渲染类型的 props，不要只使用 string，应该使用 "),e("code",[this._v("React.ReactNode")]),this._v("，以便支持传入组件、dom、number、string等")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("export class State {\n  cnt = new AsyncTuple<number>();\n  projectEnName = '';\n  projectCnName = '';\n}\n\nconst initialState = new State();\n\nfunction Reducer(state: State, action: Action): State {\n  const { payload, type } = action;\n  \n  switch (type) {\n    case Types.loading: {\n      return ...\n    }\n  }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("combineReducers 加上注释:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const reducer = combineReducers({\n   /** 导航 */\n   nav: NavReducer,\n   /** 搜索  */\n   search: SearchReducer\n});\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("全局的 State 和 GetState 类型:")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// connect\nconst mapStateToProps = (state?: IDEState, ownProp?: any): typeof initialState => ({\n  ...state.assets.map\n});\n\n// thunk\n(dispatch: any, getState: GetIDEState) => {\n  ...\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(".element { \n\t\toverflow: auto; /* auto | scroll */ \n\t\t-webkit-overflow-scrolling: touch;\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 这段代码引用自：https://github.com/binnng/device.js\n\nvar WIN = window;\nvar LOC = WIN["location"]; \nvar NA = WIN.navigator; \nvar UA = NA.userAgent.toLowerCase(); \nfunction test(needle) { \n\treturn needle.test(UA);\n} \nvar IsTouch = "ontouchend" in WIN; \nvar IsAndroid = test(/android|htc/) || /linux/i.test(NA.platform + ""); \nvar IsIPad = !IsAndroid && test(/ipad/); \nvar IsIPhone = !IsAndroid && test(/ipod|iphone/); \nvar IsIOS = IsIPad || IsIPhone; \nvar IsWinPhone = test(/windows phone/); \nvar IsWebapp = !!NA["standalone"]; \nvar IsXiaoMi = IsAndroid && test(/mi\\s+/);\nvar IsUC = test(/ucbrowser/); 21. var IsWeixin = test(/micromessenger/); \nvar IsBaiduBrowser = test(/baidubrowser/); \nvar IsChrome = !!WIN["chrome"];\nvar IsBaiduBox = test(/baiduboxapp/);\nvar IsPC = !IsAndroid && !IsIOS && !IsWinPhone;\nvar IsHTC = IsAndroid && test(/htc\\s+/);\nvar IsBaiduWallet = test(/baiduwallet/);\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("input, \ntextarea { \n\tborder: 0;\n  -webkit-appearance: none; \n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(' \x3c!-- 关闭电话号码识别： --\x3e\n <meta name="format-detection" content="telephone=no" /> \n \n \x3c!-- 开启电话功能： --\x3e \n <a href="tel:123456">123456</a> \n \n \x3c!-- 开启短信功能： --\x3e \n <a href="sms:123456">123456</a>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('\x3c!-- 关闭邮箱地址识别： --\x3e <meta name="format-detection" content="email=no" /> \n\n\x3c!-- 开启邮件发送： --\x3e <a mailto:>mobile@gmail.com">mobile@gmail.com</a>\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('<meta name="apple-mobile-web-app-status-bar-style" content="black" /> \n\x3c!-- 可选default、black、black-translucent --\x3e\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("1、公用组件写文档，"),e("code",[this._v("props")]),this._v(" 和 "),e("code",[this._v("state")]),this._v(" 必须加上中文说明")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("2、平台组件里所有的 "),e("code",[this._v("props")]),this._v(" 提供验证 "),e("code",[this._v("propTypes")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("6、禁用 "),e("code",[this._v("<a>")]),this._v(" 默认跳转行为应该使用 "),e("code",[this._v('<a href="javascript:;" />')]),this._v("，不要使用 "),e("code",[this._v("href='#'")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("7、在做 "),e("code",[this._v("Form")]),this._v(" 的时候不要使用 "),e("code",[this._v("<Form onSubmit>")]),this._v(" 因为它是传统刷新页面式的提交。正确的做法是在 submit button 上绑定 "),e("code",[this._v("onClick")]),this._v(" 手动处理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("2、回调方法一率用on-, before-, after-开头，加一名词，比如"),e("code",[this._v("onSwitched")]),this._v("，component内事件，一率用 "),e("code",[this._v("handle-")]),this._v(" 开头，加一名词")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("6、生意参谋平台相关 url 不能写死，要从 "),e("code",[this._v("LinkUrl")]),this._v(" 里读取。如果"),e("code",[this._v("LinkUrl")]),this._v("里没有，则添加到"),e("code",[this._v("LinkUrl")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("7、"),e("code",[this._v("a")]),this._v(" 标签想禁用默认跳转形为时使用 "),e("code",[this._v("<a javascript:void(0) />;")]),this._v(" ，不要使用 "),e("code",[this._v("event.preventDefault()")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("功能分支：  "),e("code",[this._v("feat/xxx")])]),e("li",[this._v("bugfix 分支：  "),e("code",[this._v("fix/xxx")])]),e("li",[this._v("tmp分支： "),e("code",[this._v("tmp/xxx")])]),e("li",[this._v("版本分支：v1.1.0")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[t._v("除发布 commit 外，不要提交 "),n("code",[t._v("build")]),t._v(" 或 "),n("code",[t._v("dist")]),t._v(" 文件；")]),n("li",[t._v("提交前一定要看一下都提交了哪些文件，可以使用 "),n("code",[t._v("git add [file_name]")]),t._v(" 一个个添加文件，不要提交无用文件。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" * 代码提交基本格式为：<type>(scope?): <subject>\n * 冒号后面要留空格\n \ntype：\n * build: 改变了build工具 如 webpack\n * ci: 持续集成新增\n * chore: 构建过程或辅助工具的变动\n * feat: 新功能\n * docs: 文档改变\n * fix: 修复bug\n * perf: 性能优化\n * refactor: 某个已有功能重构\n * revert: 撤销上一次的 commit\n * style: 代码格式改变\n * test: 增加测试\n * anno: 增加注释\n * deps: 依赖更新\n")])])])}],!1,null,null,null);e.default=a.exports}}]);